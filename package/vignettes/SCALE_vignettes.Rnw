\documentclass[10pt]{article}
\usepackage[USletter]{vmargin}
\setmargrb{1in}{0.75in}{1in}{0.75in}
\usepackage{amsmath}
\usepackage{float}
\usepackage{color}
\usepackage{amscd}
\usepackage[tableposition=top]{caption}
\usepackage{ifthen}
\usepackage[utf8]{inputenc}
\usepackage{hyperref}
%\VignetteIndexEntry{Using Canopy}
\begin{document}
\SweaveOpts{concordance=TRUE}
\title{SCALE vignette}
\author{Yuchao Jiang
    \\
    \href{mailto:yuchaoj@upenn.edu}{yuchaoj@upenn.edu}}
\maketitle
This is a demo for using the \verb@SCALE@ package in R. \verb@SCALE@ is a statistical
framework for single cell allelic expression analysis. \verb@SCALE@ estimates
kinetic parameters that characterize the transcriptional bursting process at the 
allelic level, while accounting for technical bias and other complicating
factors such as cell size. \verb@SCALE@ detects genes with significantly different
bursting kinetics between the two alleles, as well as genes where the two
alleles exhibit dependence in their bursting processes.\\

\verb@SCALE@'s \textbf{webpage} is \href{https://github.com/yuchaojiang/SCALE}{\textcolor{blue}{here}}. 
A \textbf{demo code} can be found \href{https://github.com/yuchaojiang/SCALE/blob/master/demo/demo.R}{\textcolor{blue}{here}}. Online \textbf{Q\&A forum} for
\verb@SCALE@ is available \href{https://groups.google.com/d/forum/SCALE_scRNAseq}{\textcolor{blue}{here}}. If you've any questions regarding the software, you can also email us at
\href{mailto:SCALE\_scRNAseq@googlegroups.com}{\textcolor{blue}{SCALE\_scRNAseq@googlegroups.com}}.\\

\section*{1. Installation}

R package \verb$SCALE$ is availble from GitHub ((\href{https://github.com/yuchaojiang/SCALE}{https://github.com/yuchaojiang/SCALE}):
<<Installation, eval=FALSE>>=
install.packages("devtools")
library(devtools)
install_github("yuchaojiang/SCALE/package")
@


\section*{2. SCALE workflow}
\subsection*{2.1 Data input}
The input to \verb@SCALE@ includes allele-specific read counts at heterozygous 
loci from single-cell RNA sequencing. The cells should be of the same cell types
from the same tissue (i.e., they are homogeneous). Cell-wise quality control 
procedures based on sequencing depths, mean and standard deviation of allelic ratios
are recommended.
To control for technical variability, \verb@SCALE@ uses spike-ins. The spike-in
input should be a matrix, where the rows correspond to spike-ins, the first 
column stores the true number of molecules, the second column stores the lengths
of the spike-in molecules, and the third column and on store the observed read 
counts in each cell.
\\\\
Below is a single-cell RNA sequencing dataset of 122 mouse blastocyst cells from
Deng et al. (Science 2014), followed by step-by-step analysis breakdowns.

<<Input>>=
library(SCALE)
data(mouse.blastocyst)
alleleA = mouse.blastocyst$alleleA # Read counts for A allele
alleleB = mouse.blastocyst$alleleB # Read counts for B allele
spikein_input = mouse.blastocyst$spikein_input # Spike-in input
genename = rownames(alleleA)
sampname = colnames(alleleA)
head(colnames(alleleA))
head(rownames(alleleA))
rownames(spikein_input)
head(colnames(spikein_input))
@

\subsection*{2.2 Technical variability}
A hierarchical model based on TASC (Toolkit for Analysis of Single Cell data) is
fit to the spike-in data. Parameters $\{\alpha,\beta,\kappa,\tau\}$ associated 
with dropouts, amplification and sequencing bias are returned. A pdf plot is
generated by default.
<<Technical_variability>>=
abkt = tech_bias(spikein_input = spikein_input, alleleA = alleleA, 
                 alleleB = alleleB, pdf = TRUE)
@

\subsection*{2.3 Gene classification}
\verb@SCALE@ adopts a Bayes framework that categorizes each gene into being 
silent, monoallelically expressed, and biallelically expressed (including 
biallelically bursty). Proportions of cells expressing A and B alleles and
gene categories are returned. Results from the first 10 genes are shown below.

<<Gene_classification>>=
gene.class.obj = gene_classify(alleleA=alleleA[1:10,], alleleB=alleleB[1:10,])
A.prop = gene.class.obj$A.prop # Proportion of cells expressing A allele
B.prop = gene.class.obj$B.prop # Proportion of cells expressing B allele
gene.category = gene.class.obj$gene.category # Gene category
results.list = gene.class.obj$results.list # Posterior assignments of cells
@

<<Gene_classification2, echo=FALSE>>=
data(gene.class.obj)
A.prop = gene.class.obj$A.prop
B.prop = gene.class.obj$B.prop
gene.category = gene.class.obj$gene.category
results.list = gene.class.obj$results.list
@

\subsection*{2.4 Allele-specific bursting kinetics}
The two alleles of a gene have two Poisson-Beta distributions with respective 
parameters. These two Poisson-Beta distributions share the same cell-size
factor. Cell-size factor can be estimated by the expression level of \textit{GAPDH}
or by the ratio of total number of endogenous RNA reads over the total number of
spike-in reads.
A Poisson hierarchical model is used to account for technical variability that
is introduced by sequencing and library prep. Histogram repiling method is used
to adjust for technical variability (bandwidth is optimized based on correlations
of the inferred kinetic parameters between the two alleles). Moment estimator is
used to estimate bursting kinetics. A plot (pdf format) is generated by default
as is shown in Figure 1.
<<allelic_bursting>>=
cellsize = rep(1, ncol(alleleA))  # cell size input
allelic.kinetics.obj = allelic_kinetics(alleleA = alleleA[1:1000,], 
                                        alleleB = alleleB[1:1000,], 
                                        abkt = abkt, 
                                        gene.category = gene.category[1:1000], 
                                        cellsize = cellsize, pdf = TRUE)
bandwidth = allelic.kinetics.obj$bandwidth
konA = allelic.kinetics.obj$konA; konB = allelic.kinetics.obj$konB
koffA = allelic.kinetics.obj$koffA; koffB = allelic.kinetics.obj$koffB
sA = allelic.kinetics.obj$sA; sB = allelic.kinetics.obj$sB
sizeA = sA/koffA; sizeB = sB/koffB
@


\begin{figure}
\begin{center}
\setkeys{Gin}{width=1\linewidth}
<<label=fig1,fig=TRUE,echo=FALSE,height=4.5,width=8>>=
  # below is code to generate figures in vignettes ONLY! A pdf will be generated
  # by default using the allelic_kinetics() function.
      par(mfrow=c(1,2))
      konA.temp=log((konA)[(!is.na(konA))&(!is.na(konB))&(konA>0)&(konB>0)])
      konB.temp=log((konB)[(!is.na(konA))&(!is.na(konB))&(konA>0)&(konB>0)])
      plot(konA.temp,konB.temp,pch=16,cex=0.4,
           xlim=c(min(konA.temp,konB.temp),2),
           ylim=c(min(konA.temp,konB.temp),2),
           xlab='log(konA)',ylab='log(konB)')
      grid()
      abline(a=0,b=1,lty=2,lwd=1.5,col='blue')
      legend('topleft',paste('r =',round(cor(konA.temp,konB.temp),3)),bty='n')
      
      sizeA.temp=log((sA/koffA)[(!is.na(konA))&(!is.na(konB))&(konA>0)&(konB>0)])
      sizeB.temp=log((sB/koffB)[(!is.na(konA))&(!is.na(konB))&(konA>0)&(konB>0)])
      plot(sizeA.temp,sizeB.temp,pch=16,cex=0.4,
           xlim=c(2,max(sizeA.temp,sizeB.temp)),
           ylim=c(2,max(sizeA.temp,sizeB.temp)),
           xlab='log(sA/koffA)',ylab='log(sB/koffB)')
      grid()
      abline(a=0,b=1,lty=2,lwd=1.5,col='blue')
      legend('topleft',paste('r =',round(cor(sizeA.temp,sizeB.temp),3)),bty='n')
@
\end{center}
\caption{Allelic bursting kinetics (burst frequency and bursty size). 
Only first 1000 genes are computed.}
\label{fig:one}
\end{figure}

<<allelic_bursting2, echo=FALSE>>=
data(allelic.kinetics.obj)
bandwidth=allelic.kinetics.obj$bandwidth
konA=allelic.kinetics.obj$konA
koffA=allelic.kinetics.obj$koffA
sA=allelic.kinetics.obj$sA
konB=allelic.kinetics.obj$konB
koffB=allelic.kinetics.obj$koffB
sB=allelic.kinetics.obj$sB
sizeA=sA/koffA
sizeB=sB/koffB
@

\subsection*{2.5 Hypothesis testing}
Nonparametric hypothesis test and chi-square test are carried out to test 
whether the two alleles of a gene share the same bursting kinetics and whether
they burst independently. For test of same burst size and burst frequency 
between the two alleles, there are two `modes': the \textit{raw} mode 
bootstrap-samples from the raw observed allelic read counts; the \textit{corrected}
mode bootstrap-samples from the adjusted allelic read counts. Both modes give
very similar results while the latter runs faster.

<<testing1, eval=FALSE>>=
# Nonparametric test on whether the two alleles share the same burst frequency and burst size.
diff.allelic.obj = diff_allelic_bursting(alleleA = alleleA,
                                         alleleB = alleleB,
                                         cellsize = cellsize,
                                         gene.category = gene.category,
                                         abkt = abkt,
                                         allelic.kinetics.obj = allelic.kinetics.obj,
                                         mode = 'corrected')
pval.kon = diff.allelic.obj$pval.kon; pval.size = diff.allelic.obj$pval.size
@

<<testing2, eval=TRUE, echo=FALSE>>=
data(diff.allelic.obj)
pval.kon = diff.allelic.obj$pval.kon; pval.size = diff.allelic.obj$pval.size
@

<<testing3>>=
# Chi-square test on whether the two alleles fire independently.
non.ind.obj = non_ind_bursting(alleleA = alleleA, alleleB = alleleB,
                               gene.category = gene.category,
                               results.list = results.list)
pval.ind = non.ind.obj$pval.ind; non.ind.type = non.ind.obj$non.ind.type
@

\subsection*{2.6 Plot and output}
For each gene, a plot (pdf format) can be generated with inferred parameters as
well as summary statistics, as is shown in Figure 2.\\
<<plot_gene, eval = FALSE>>=
i=which(genename=='Btf3l4')
allelic_plot(alleleA = alleleA, alleleB = alleleB,
             gene.class.obj = gene.class.obj,
             allelic.kinetics.obj = allelic.kinetics.obj,
             diff.allelic.obj = diff.allelic.obj,
             non.ind.obj = non.ind.obj, i= i)
@

\begin{figure}
\begin{center}
\setkeys{Gin}{width=0.6\linewidth}
<<label=fig2,fig=TRUE,echo=FALSE,height=6,width=5>>=
  # below is code to generate figures in vignettes ONLY! A pdf will be generated
  # by default using the allelic_plot() function.
  genename=rownames(alleleA)
  i=which(genename=='Btf3l4')
  gene.category=gene.class.obj$gene.category
  A.prop=gene.class.obj$A.prop
  B.prop=gene.class.obj$B.prop
  results.list=gene.class.obj$results.list
    
  konA=allelic.kinetics.obj$konA
  koffA=allelic.kinetics.obj$koffA
  sA=allelic.kinetics.obj$sA
  konB=allelic.kinetics.obj$konB
  koffB=allelic.kinetics.obj$koffB
  sB=allelic.kinetics.obj$sB
  sizeA=sA/koffA
  sizeB=sB/koffB
  
  pval.kon=diff.allelic.obj$pval.kon
  pval.size=diff.allelic.obj$pval.size
  pval.ind=non.ind.obj$pval.ind
  non.ind.type=non.ind.obj$non.ind.type
    
  N=apply(alleleA+alleleB,2,sum)
  lib.size=N/mean(N)
  Ai=(alleleA[i,])/(lib.size)
  Bi=(alleleB[i,])/(lib.size)
  par(mfrow=c(2,1))
  par(mar=c(3,4,5,4))
  par(mgp=c(2,0.6,.4))
  barplot(Ai,ylim=c(-max(Bi),max(Ai)),col='red',names.arg='',xlab='Cell',ylab='Adjusted reads')
  barplot(-Bi,ylim=c(-max(Bi),max(Ai)),col='blue',add=TRUE,names.arg='')
  title(paste('Gene',genename[i]))
  
  par(mar=c(1,4,2,4))
  plot(c(0, 1), c(0, 1), ann = FALSE, bty = "n", type = "n",xaxt = "n", yaxt = "n")
  legend('topleft',col=c('red'),legend=c('A allele'),pch=15,bty='n')
  legend('topright',y=1,col=c('blue'),legend=c('B allele'),pch=15,bty='n')
  text(x=0.5,y=0.8,paste('Gene category :',gene.category[i]))
  text(x=0.5,y=0.65,paste('Number of cells:',paste(names(results.list[[1]]),results.list[[1]],collapse = '; ')))
  if(gene.category[i]=='Biallelic.bursty'){
    text(x=0.5,y=0.5,paste('konA =',round(konA[i],3),'sizeA =',round(sizeA[i],3)))
    text(x=0.5,y=0.4,paste('konB =',round(konB[i],3),'sizeB =',round(sizeB[i],3)))
    text(x=0.5,y=0.2,paste('Test of shared burst freq: pval =',round(pval.kon[i],4)))
    text(x=0.5,y=0.1,paste('Test of shared burst size: pval =',round(pval.size[i],4)))
    text(x=0.5,y=0,paste('Test of independent bursting: pval =',round(pval.ind[i],4)))
  }
@
\end{center}
\caption{SCALE plot output for gene \textit{Btf3l4}.}
\label{fig:two}
\end{figure}

The final output of \verb@SCALE@ is a tab delimited text file. The columns
include: \verb@genename@ (gene name), \verb@gene.category@ (gene category), 
\verb@konA@ (burst frequency A), \verb@konB@ (burst frequency B),
\verb@pval.kon@ (p-value of shared burst frequency), \verb@sizeA@ (burst size A),
\verb@sizeB@ (burst size B), \verb@pval.size@ (p-value of shared burst size), 
\verb@A_cell@, \verb@B_cell@, \verb@AB_cell@, \verb@Off_cell@ (number of cells 
with posterior assignment of A, B, AB, and Off), \verb@A_prop@ (proportion
of cells expressing A allele), \verb@B_prop@ (proportion of cells expressing B
allele), \verb@p.ind@ (p-value of burst independence), and \verb@non.ind.type@ 
(direction of non-independent bursting: `C' is for coordinated bursting; `R' for
repulsed bursting).

<<output>>=
SCALE.output=output_table(alleleA=alleleA, alleleB=alleleB,
                          gene.class.obj = gene.class.obj,
                          allelic.kinetics.obj = allelic.kinetics.obj,
                          diff.allelic.obj = diff.allelic.obj,
                          non.ind.obj = non.ind.obj)
head(SCALE.output)
write.table(SCALE.output, file = 'SCALE.output.txt', col.names = TRUE,
            row.names = FALSE, quote = FALSE, sep = '\t')
@


\section*{3. Citation}
Modeling allele-specific gene expression by single-cell RNA sequencing,
Yuchao Jiang, Nancy R zhang, Mingyao Li, \textit{submitted}, 2016.


\section*{4. Session information:}
Output of sessionInfo on the system on which this document was compiled:

<<sessionInfo, results=tex, echo=FALSE>>=
toLatex(sessionInfo())
@

\end{document}